// Code generated by MockGen. DO NOT EDIT.
// Source: fetcher/cloudflare.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	api "github.com/scratch-net/ethproxy/api"
	reflect "reflect"
)

// MockBlockFetcher is a mock of BlockFetcher interface
type MockBlockFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockBlockFetcherMockRecorder
}

// MockBlockFetcherMockRecorder is the mock recorder for MockBlockFetcher
type MockBlockFetcherMockRecorder struct {
	mock *MockBlockFetcher
}

// NewMockBlockFetcher creates a new mock instance
func NewMockBlockFetcher(ctrl *gomock.Controller) *MockBlockFetcher {
	mock := &MockBlockFetcher{ctrl: ctrl}
	mock.recorder = &MockBlockFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlockFetcher) EXPECT() *MockBlockFetcherMockRecorder {
	return m.recorder
}

// FetchBlock mocks base method
func (m *MockBlockFetcher) FetchBlock(key string) (*api.Block, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchBlock", key)
	ret0, _ := ret[0].(*api.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchBlock indicates an expected call of FetchBlock
func (mr *MockBlockFetcherMockRecorder) FetchBlock(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchBlock", reflect.TypeOf((*MockBlockFetcher)(nil).FetchBlock), key)
}
